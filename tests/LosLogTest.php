<?php

namespace LosMiddleware\LosLog;

use org\bovigo\vfs\vfsStream;
use PHPUnit\Framework\TestCase;
use Psr\Http\Server\RequestHandlerInterface;
use Zend\Diactoros\ServerRequest;
use Zend\Diactoros\Response;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-02 at 10:24:10.
 */
class LosLogTest extends TestCase
{
    /**
     * @var LosLog
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->root = vfsStream::setup('home');
        $file       = vfsStream::url('home/static.log');

        $this->logger = AbstractLogger::generateFileLogger($file, null);
        $this->object = new LosLog($this->logger);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers LosMiddleware\LosLog\LosLog::__construct
     * @covers LosMiddleware\LosLog\LosLog::process
     */
    public function testProcess()
    {
        $request = new ServerRequest();
        $error   = new \Exception('Exception test!');

        $handler = $this->prophesize(RequestHandlerInterface::class);
        $handler->handle($request)->willThrow($error);

        try {
            $this->object->process($request, $handler->reveal());
        } catch (\Throwable $e) {
            $this->assertInstanceOf(\Exception::class, $e);
        }

        $log = $this->root->getChild('home/static.log')->getContent();
        $this->assertNotFalse(strpos($log, 'Exception test!'));
    }
}
